import random

# 游댮 Nivel Avanzado
# Validar contrase침a segura
# Escribe una funci칩n que valide si una contrase침a cumple con requisitos de seguridad (may칰sculas, min칰sculas, n칰meros y s칤mbolos).
def es_contrasena_segura(contrasena: str):
    mayuscula = False
    minuscula = False
    numero = False
    simbolo = False

    for caracter in contrasena:
        if caracter.isupper():
            mayuscula = True
        elif caracter.islower():
            minuscula = True
        elif caracter.isdigit():
            numero = True
        else:
            if not caracter.isspace():
                simbolo = True

    if mayuscula and minuscula and numero and simbolo:
        return True
    else:
        return False
print(es_contrasena_segura("Hola1/"))


# Simular dado
# Crea una funci칩n que simule el lanzamiento de un dado de 6 caras.
def lanzar_dado():
    return random.randint(1, 6)

# Suma de elementos 칰nicos
# Escribe una funci칩n que reciba una lista de n칰meros y devuelva la suma de los elementos 칰nicos.
def suma_unicos(lista):
    return sum([x for x in lista if lista.count(x) == 1])
# Generador de contrase침as
# Crea una funci칩n que genere una contrase침a aleatoria de una longitud dada.
import random

def passwordgenerator(length):
    if length < 4:
        return "La contrase침a debe tener al menos 4 caracteres."
    minusculas = "abcdefghijklmnopqrstuvwxyz"
    mayusculas = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    numeros = "0123456789"
    simbolos = "!#$%&/()=?춰+*[]}{-.,<>~|"
    todos = minusculas + mayusculas + numeros + simbolos
    password = ''.join(random.choice(todos) for _ in range(length))
    return password
# Composici칩n de funciones
# Escribe una funci칩n que reciba otra funci칩n como par치metro y aplique una composici칩n de funciones.
def componer(func1,func2, valor):
    return func1(func2(valor))

